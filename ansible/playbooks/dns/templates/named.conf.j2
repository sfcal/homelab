acl trusted {
  localhost;
  localnets;
  10.1.0.0/24;
  10.1.20.0/24;
  10.1.200.0/24;
  10.2.20.0/24;
  10.2.0.0/24;
  10.1.40.0/24;
  10.2.40.0/24;
  10.1.200.0/24;
  10.1.230.0/24;
  10.2.230.0/24;
};

options {
  directory "/var/cache/bind";
  
  // Enable recursion
  recursion yes;
  
  // Forward to Cloudflare DNS for external resolution
  forwarders {
    1.1.1.1;
    1.0.0.1;
  };
  
  // Enable query logging for debugging
  querylog yes;
  
  // Allow queries from trusted networks
  allow-query { trusted; };
  
  // Allow recursive queries from trusted networks
  allow-recursion { trusted; };
  
  // Prevent zone transfers except to secondary servers
  allow-transfer { none; };
  
  // Enable DNSSEC validation
  dnssec-validation auto;
  
  // Listen on all interfaces
  listen-on { any; };
  listen-on-v6 { any; };
};

{% set current_server = dns_servers | selectattr('ip', 'equalto', ansible_default_ipv4.address) | first %}
{% set is_primary = current_server.role == 'primary' %}
{% set secondary_ips = dns_servers | selectattr('role', 'equalto', 'secondary') | map(attribute='ip') | list %}

// Local-only zone
zone "local.sfc.al" IN {
{% if is_primary %}
  type master;
  file "/etc/bind/local-sfc-al.zone";
{% if secondary_ips %}
  allow-transfer { {% for ip in secondary_ips %}{{ ip }}; {% endfor %}};  // Allow transfer to secondary
  notify yes;                      // Notify secondary of changes
{% endif %}
{% else %}
  type slave;
  file "/var/cache/bind/local-sfc-al.zone";
  masters { {{ dns_servers | selectattr('role', 'equalto', 'primary') | map(attribute='ip') | first }}; };
{% endif %}
};

// Split horizon zone for public domain
zone "sfc.al" IN {
{% if is_primary %}
  type master;
  file "/etc/bind/sfc-al.zone";
{% if secondary_ips %}
  allow-transfer { {% for ip in secondary_ips %}{{ ip }}; {% endfor %}};  // Allow transfer to secondary
  notify yes;                      // Notify secondary of changes
{% endif %}
{% else %}
  type slave;
  file "/var/cache/bind/sfc-al.zone";
  masters { {{ dns_servers | selectattr('role', 'equalto', 'primary') | map(attribute='ip') | first }}; };
{% endif %}
};

// Reverse zone for 10.1.0.0/24
zone "0.1.10.in-addr.arpa" IN {
{% if is_primary %}
  type master;
  file "/etc/bind/0.1.10.in-addr.arpa.zone";
{% if secondary_ips %}
  allow-transfer { {% for ip in secondary_ips %}{{ ip }}; {% endfor %}};  // Allow transfer to secondary
  notify yes;                      // Notify secondary of changes
{% endif %}
{% else %}
  type slave;
  file "/var/cache/bind/0.1.10.in-addr.arpa.zone";
  masters { {{ dns_servers | selectattr('role', 'equalto', 'primary') | map(attribute='ip') | first }}; };
{% endif %}
};
