---
# Common variables for all hosts
ansible_user: sfcal
systemd_dir: /etc/systemd/system

# Set your timezone
system_timezone: America/New_York

# K3s version
k3s_version: v1.30.2+k3s2

# Network configuration
flannel_iface: eth0

# Virtual IP for K3s API
apiserver_endpoint: 10.1.20.222

# K3s token for secure master communication
k3s_token: some-SUPER-DEDEUPER-secret-password

# Node IP configuration
k3s_node_ip: "{{ ansible_facts[flannel_iface]['ipv4']['address'] }}"

# Master taint configuration
k3s_master_taint: "{{ true if groups['k3s_node'] | default([]) | length >= 1 else false }}"

# K3s arguments for all nodes
extra_args: >-
  --flannel-iface={{ flannel_iface }}
  --node-ip={{ k3s_node_ip }}

# K3s server arguments
extra_server_args: >-
  {{ extra_args }}
  {{ '--node-taint node-role.kubernetes.io/master=true:NoSchedule' if k3s_master_taint else '' }}
  --tls-san {{ apiserver_endpoint }}
  --disable servicelb
  --disable traefik
  --kube-controller-manager-arg bind-address=0.0.0.0 
  --kube-proxy-arg metrics-bind-address=0.0.0.0 
  --kube-scheduler-arg bind-address=0.0.0.0 
  --etcd-expose-metrics true 
  --kubelet-arg containerd=/run/k3s/containerd/containerd.sock

# K3s agent arguments
extra_agent_args: >-
  {{ extra_args }}

# Kube-vip configuration
kube_vip_arp: true
kube_vip_bgp: false
kube_vip_bgp_routerid: "127.0.0.1"
kube_vip_bgp_as: "64513"
kube_vip_bgp_peeraddress: "192.168.30.1"
kube_vip_bgp_peeras: "64512"
kube_vip_tag_version: v0.8.8
kube_vip_iface:
kube_vip_cloud_provider_tag_version: main
kube_vip_bgp_peers: []
kube_vip_bgp_peers_groups: ['k3s_master']
kube_vip_leaseduration: "40"
kube_vip_renewdeadline: "30"
kube_vip_retryperiod: "10"

# MetalLB configuration
metal_lb_type: native
metal_lb_mode: layer2
metal_lb_speaker_tag_version: v0.14.8
metal_lb_controller_tag_version: v0.14.8
metal_lb_ip_range: 10.1.20.140-10.1.20.150
metal_lb_available_timeout: 240s

# Misc K3s configuration
retry_count: 20
group_name_master: k3s_master
k3s_kubectl_binary: k3s kubectl

# Server init args (computed)
server_init_args: >-
  {% if groups[group_name_master | default('k3s_master')] | length > 1 %}
    {% if ansible_hostname == hostvars[groups[group_name_master | default('k3s_master')][0]]['ansible_hostname'] %}
      --cluster-init
    {% else %}
      --server https://{{ hostvars[groups[group_name_master | default('k3s_master')][0]].k3s_node_ip | split(",") | first | ansible.utils.ipwrap }}:6443
    {% endif %}
    --token {{ k3s_token }}
  {% endif %}
  {{ extra_server_args }}